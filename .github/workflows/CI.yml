name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '^3.10'

      - name: Install Poetry
        run: pipx install poetry

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run tests
        run: poetry run pytest  # Or your test command, e.g., poetry run tox

      - name: Bump version and commit
        id: version
        # Only run if the tests passed
        if: success()
        run: |
          poetry version patch
          VERSION=$(poetry version -s)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Bump version to $VERSION"
          git push

      - name: Create GitHub Release
        # Only run if tests and version bumping passed
        if: success() && steps.version.outcome == 'success'
        uses: elgohr/Github-Release-Action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          title: Release v${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false